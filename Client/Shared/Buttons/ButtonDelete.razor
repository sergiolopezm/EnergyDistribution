<button type="@Type" class="btn btn-success @(ContainerSize ? "form-control" : "")" disabled="@Disabled" id="@Id" @onclick="EjecutarOnClick">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
        <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0" />
    </svg>
    @Text
</button>

@code {

    [Parameter] public string Text { get; set; } = "button";
    [Parameter] public string Type { get; set; } = "button";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public Action? OnClick { get; set; } = null!;
    [Parameter] public Func<Task>? OnClickAsync { get; set; } = null;
    [Parameter] public bool ContainerSize { get; set; } = true;
    [Parameter] public string Id { get; set;} = "";

    private async Task EjecutarOnClick()
    {
        Disabled = true;
        try
        {
            if (Type == "button")
            {
                if (OnClick != null)
                {
                    OnClick?.Invoke();
                }
                if (OnClickAsync != null)
                {
                    await OnClickAsync.Invoke();
                }
            }
        }finally
        {
            Disabled = false;
        }
    }

}
